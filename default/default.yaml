---
# This Flow describes what forjj will need to do with plugins
title: "Basic GIT flow with one GIT upstream remote"
define: # Collection of plugin types
  upstream:
    # roles: # Array of upstream role name to assign to each upstream instances. by default, the role is upstream.
    # - "upstream"
    max_instances: 1 # Max number of upstream services a repo configured in Pull Request flow can accept.
  ci:
    max_instances: 1 # Max number of ci services a repo configured in Pull Request flow can accept.
flow:
  create: # Actions to do to create flow elements. Assume local git repo exist connected to the upstream repo.
  - instance: ["upstream", "ci_update"]
  - instance: ["ci", "create_webhook"]
  - instance: ["ci", "create_jobs"]
  start: # Actions to do to start a new work (forjj create or update)
  - git: ["checkout", "-b", "{{ .Branch }}"]
  - git: ["push", "-u", "origin", "{{ .Branch }}"]
  close: # Actions to do to close a forjj task.
  - git: ["push"]
  - git: ["checkout", "master"]
  - git: ["branch", "-D", "{{ .Branch }}"]
  maintain: # Action to do to
  - git: ["checkout", "master"]
  - git: ["reset", "--hard", "HEAD"]
  - git: ["clean"]
  - git: ["pull"]

forjfile: # On top of loaded Forjfile:
  do: # do the following:
    jenkins-update-for-github: # update the list of features
      description: Set jenkins features for Github
      on: repos # loop on repositories condition is true. => .Current = <Repo object>
      # Set if we found the repo attached to an upstream/github and attached to a ci/jenkins
      if_found: |
        {{ if .Current.Apps.upstream.Driver 'github' }}\
        {{ $CI := Range .Current.Apps.ci }}{{ if $CI.Driver 'jenkins')) }}
        found
        {{ end }}{{ end }}
      set: # Set object features with:
        features:
          plugin:github:1.18.2: {}
          feature:ghprb : {}
    create-github-webhook-to-jenkins:
      decription: Define the jenkins webhook
      on: apps # Looping on all Repositories
      if:
        # The repo is attached to an upstream/github
        - "{{ if .Current.Apps.upstream.Driver 'github' }} 1 {{ end }}"
        # and is attached to a ci/jenkins
        - "{{ $CI := Range .Current.Apps.ci }}{{ if $CI.Driver 'jenkins')) }} 1 {{ end }}"
      set: # map[string]map[string]<string|[]string>
        webhooks: # set a webhook in loaded Forjfile to jenkins server
          "jenkins-{{ .Current.Upstream.Github.Name }}":
            url: "{{ .App.JenkinsProto}}://{{ .App.JenkinsAddr }}{{ if .App.JenkinsPort}}:{{.App.JenkinsPort}}{{ end }}/"
            events: pull_request,push
            repos: "{{ .MatchRepos.Join ',' }}"
            app: "{{ .Current.Name }}"
    create-seedjobs:
      description: Set project
      on-each: repos # Set for each repos => .Current = <Repo object>
      if:
        - upstream/github # If the repo is attached to an upstream/github
        - ci/jenkins      # and attached to ci/jenkins
      set:
        projects:
          "{{ .Current.Name }}":
            remote-type:       "{{ .Current.RemoteType }}"
            github-api-url:    "{{ .Current.UpstreamAPIUrl }}"
            github-repo-owner: "{{ .Current.Owner }}"
            github-repo:       "{{ .Current.Name }}"
